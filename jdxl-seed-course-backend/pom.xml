<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>jdxl-seed-course</artifactId>
        <groupId>com.jdxl</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jdxl-seed-course-backend</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    <name>${project.artifactId}</name>

    <dependencies>

        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-seed-course-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-seed-course-bean</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-seed-course-core</artifactId>
        </dependency>

        <!-- jdxl-cloud-core -->
        <dependency>
            <groupId>com.cloud</groupId>
            <artifactId>cloud-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-common-bean</artifactId>
        </dependency>
        <!-- 用户系统 -->
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-user-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-user-bean</artifactId>
        </dependency>
        <!-- 报警系统 -->
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-alarm-api</artifactId>
        </dependency>

        <!-- spring boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- nacos-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.nacos</groupId>
            <artifactId>nacos-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>HdrHistogram</artifactId>
                    <groupId>org.hdrhistogram</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jsr305</artifactId>
                    <groupId>com.google.code.findbugs</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
        </dependency>

        <!-- Database-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.shardingsphere</groupId>
            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cloud</groupId>
            <artifactId>shardingsphere-ext</artifactId>
        </dependency>
        <dependency>
            <groupId>io.shardingsphere</groupId>
            <artifactId>sharding-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <classifier>indy</classifier>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- pagehelper -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
        </dependency>

        <!-- Tools-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.skywalking</groupId>
            <artifactId>apm-toolkit-logback-1.x</artifactId>
        </dependency>
        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <!-- rabbitmq -->
        <dependency>
            <groupId>com.jdxl</groupId>
            <artifactId>jdxl-rabbitmq-spring-boot-starter</artifactId>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>objenesis</artifactId>
                    <groupId>org.objenesis</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
<!--            &lt;!&ndash;docker镜像build插件&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.2.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 &ndash;&gt;-->
<!--                    <imageName>jdxl/${project.artifactId}</imageName>-->
<!--                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->
<!--                    <rm>true</rm>-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/</targetPath>-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <!--docker镜像build插件-->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <from>
                        <image>${docker.registry.url}/${docker.image.base}</image>
                    </from>
                    <to>
                        <image>${docker.registry.url}/${project.artifactId}</image>
                        <tags>
                            <tag>${project.version}-${docker.env}-${docker.version}</tag>
                        </tags>
                    </to>
                    <container>
                        <volumes>
                            <volume>/data/logs</volume>
                            <volume>/tmp</volume>
                        </volumes>
                        <entrypoint>
                            <arg>/sbin/tini</arg>
                            <arg>--</arg>
                            <arg>/bin/sh</arg>
                            <arg>-c</arg>
                            <arg>java -javaagent:/skywalking/agent/skywalking-agent.jar=agent.service_name=${SERVICE_NAME},collector.backend_service=${AGENT_COLLECTOR_ADDRESS} ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -cp /app/resources/:/app/classes/:/app/libs/* com.jdxl.tag.Application ${SPRING_PARAMS}</arg>
                        </entrypoint>
                        <environment>
                            <SERVICE_NAME>${project.artifactId}-${project.version}</SERVICE_NAME>
                            <TZ>Asia/Shanghai</TZ>
                        </environment>
                        <format>Docker</format>
                        <!--使用该参数将镜像的创建时间与系统时间对齐-->
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <!-- 用于指定要添加的目录，默认为${project.basedir}/src/main/jib，
                             即该目录下的文件夹会在docker镜像中同步创建，
                             目录层级关系以jib下目录层级关系为准-->
                        <!--<extraDirectory>${project.basedir}/src/main/jib</extraDirectory>-->
                    </container>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
